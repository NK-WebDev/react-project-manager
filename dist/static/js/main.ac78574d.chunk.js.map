{"version":3,"sources":["components/layouts/SignedinLinks.js","store/actions/authActions.js","components/layouts/SignedoutLinks.js","components/layouts/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/Signup.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","state","authError","auth","dispatch","signOut","getState","_ref2","getFirebase","then","type","catch","err","props","react_default","a","createElement","className","react_router_dom","to","href","onClick","profile","initials","SignedoutLinks","firebase","links","uid","layouts_SignedinLinks","layouts_SignedoutLinks","exact","Notifications","notifications","map","item","key","id","user","content","dist_default","fromNow","time","toDate","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","calendar","createdAt","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","console","log","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layouts_Navbar","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","attachAuthIsReady","useFirestoreForProfile","userProfile","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac78574d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\nfunction SignedinLinks(props) {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a href=\"#\" onClick={props.signOut}>\r\n          Log Out\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignedinLinks);\r\n","import { getFirestore } from \"redux-firestore\";\r\n\r\nexport const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"LOGOUT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(res => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(res.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0]\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        console.log(\"working\", err);\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction SignedoutLinks() {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Signup</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Log in</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default SignedoutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedinLinks from \"./SignedinLinks\";\r\nimport SignedoutLinks from \"./SignedoutLinks\";\r\nimport { connect } from \"react-redux\";\r\nfunction Navbar(props) {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? (\r\n    <SignedinLinks profile={profile} />\r\n  ) : (\r\n    <SignedoutLinks />\r\n  );\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" exact className=\"brand-logo left\">\r\n          Mario Plan\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nfunction Notifications(props) {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map(item => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <span className=\"pink-text\">{item.user} </span>\r\n                    <span> {item.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      <Moment fromNow>{item.time.toDate()}</Moment>\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport Moment from \"react-moment\";\r\n\r\nfunction ProjectSummary({ project }) {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          Posted by the {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          <Moment calendar>{project.createdAt.toDate()}</Moment>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ProjectList({ projects }) {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map(project => {\r\n          return (\r\n            <Link key={project.id} to={\"projects/\" + project.id}>\r\n              <ProjectSummary project={project} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) {\r\n      return <Redirect to=\"/signin\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard continer\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nfunction ProjectDetails(props) {\r\n  const { project, auth } = props;\r\n\r\n  if (!auth.uid) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n  if (project) {\r\n    return (\r\n      <div>\r\n        <div className=\"container section project-details\">\r\n          <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n              <span className=\"card-title\">{project.title}</span>\r\n              <p>{project.content}</p>\r\n            </div>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n              <div>\r\n                Posted by the {project.authorFirstName} {project.authorLastName}\r\n              </div>\r\n              <div>\r\n                <Moment calendar>{project.createdAt.toDate()}</Moment>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        <h4>Loading...</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {\r\n      collection: \"projects\"\r\n    }\r\n  ])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white login\">\r\n          <h5 className=\"grey-text form-title text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              value={this.state.email}\r\n              type=\"email\"\r\n              onChange={this.handleChange}\r\n              id=\"email\"\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              onChange={this.handleChange}\r\n              value={this.state.password}\r\n              id=\"password\"\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depht-0\">Login</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n            {authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white login\">\r\n          <h5 className=\"grey-text form-title text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" onChange={this.handleChange} id=\"firstName\" />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" onChange={this.handleChange} id=\"lastName\" />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" onChange={this.handleChange} id=\"email\" />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" onChange={this.handleChange} id=\"password\" />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depht-0\">Sign up</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n            {authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state.auth.authError);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) {\r\n      return <Redirect to=\"/signin\" />;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white login\">\r\n          <h5 className=\"grey-text form-title text-darken-3\">Create Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">title</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.title}\r\n              onChange={this.handleChange}\r\n              id=\"title\"\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Content</label>\r\n            <textarea\r\n              value={this.state.content}\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleChange}\r\n              id=\"content\"\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depht-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateProject);\r\n","export const createProject = project => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // make async call to DB\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId,\r\n        createdAt: new Date()\r\n      })\r\n      .then(() => {\r\n        dispatch({\r\n          type: \"CREATE_PROJECT\",\r\n          project\r\n        });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layouts/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/Signup\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Route path=\"/\" exact component={Dashboard} />\n        <Route component={ProjectDetails} path=\"/projects/:id\" />\n        <Route component={SignIn} path=\"/signin\" />\n        <Route component={SignUp} path=\"/signup\" />\n        <Route component={CreateProject} path=\"/create\" />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      return {\r\n        ...state,\r\n        authError: \"Login Failed\"\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNOUT_SUCESS\":\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"LOGOUT_ERROR\":\r\n      return {\r\n        ...state,\r\n        authError: \"Log out failed\"\r\n      };\r\n    case \"SIGNUP_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    {\r\n      id: \"1\",\r\n      title: \"help me find peach\",\r\n      content: \"blah blah blah\"\r\n    },\r\n    {\r\n      id: \"2\",\r\n      title: \"help me play chess\",\r\n      content: \"blah blah blah\"\r\n    },\r\n    {\r\n      id: \"3\",\r\n      title: \"get a job\",\r\n      content: \"blah blah blah\"\r\n    }\r\n  ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"created project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyATxe5WGn1YsAAgoL1Sx8ackFllSI_X4GQ\",\r\n  authDomain: \"net-ninja-marioplan-a26eb.firebaseapp.com\",\r\n  databaseURL: \"https://net-ninja-marioplan-a26eb.firebaseio.com\",\r\n  projectId: \"net-ninja-marioplan-a26eb\",\r\n  storageBucket: \"net-ninja-marioplan-a26eb.appspot.com\",\r\n  messagingSenderId: \"578391484128\",\r\n  appId: \"1:578391484128:web:c699fa228a2ecdf8\"\r\n};\r\n// Initialize Firebase\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default app;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"materialize-css/dist/js/materialize\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { getFirestore, reduxFirestore } from \"redux-firestore\";\nimport { getFirebase, reactReduxFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      attachAuthIsReady: true,\n      useFirestoreForProfile: true,\n      userProfile: \"users\"\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}